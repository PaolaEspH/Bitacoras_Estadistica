---
title: "Untitled"
format: html
editor: visual
---

## Análisis Estadistico

La base de datos ya se encuentra en formato en tidy, recordemos que el formato tidy fue popularizado por el autor Hadley Wickham, donde indican que cada variable debe tener su propia columna y cada observación su propia fila. Nuestra base de datos cumple con estar en formato tidy.

Vamos a llamar a nuestra base de datos, la cual vamos a utilizar durante el trabajo.

```{r}
library(readr)
library(tidyverse)

data_accidentes <-  read.csv("../data/clean_data.csv")

data_accidentes <- data_accidentes %>% 
  select(-X) %>%
  select(-pedestrian) %>%
  select(-flatHill) %>%
  select(-tlaId) %>%
  select(-trafficControl)

data_accidentes$holiday <- ifelse(is.na(data_accidentes$holiday) | data_accidentes$holiday == "", "No festivo", data_accidentes$holiday)

```

```{r}
head(data_accidentes)
```

Antes de aplicar cualquier gráfico o análisis de datos a nuestra base de datos, es importante eliminar las variables que no aportan al estudio, por ello, vamos a eliminar los valores NA que vengan en nuestra base de datos y columnas que no sean de nuestro interés.

```{r}
library(dplyr)
  
data_limpia <- na.omit(data_accidentes)

data <- data_limpia

colnames(data) <- c("velocidad_recomendada", "severidad", "fatales" ,"festivos", "iluminación", "lesiones_menores", "carretera", "lesiones_graves", "limite_velocidad", "clima")


data <- data %>%
  mutate(clima = case_when(
    clima %in% c("Fine", "Fine & Frost", "Fine & Strong wind") ~ "Buen clima",
    clima %in% c("Light rain", "Light rain & Frost", "Light rain & Strong wind") ~ "Lluvia ligera",
    clima %in% c("Heavy rain", "Heavy rain & Frost", "Heavy rain & Strong wind") ~ "Lluvia intensa",
    clima %in% c("Snow", "Snow & Frost", "Snow & Strong wind") ~ "Nieve",
    clima %in% c("Hail or Sleet", "Hail or Sleet & Frost", "Hail or Sleet & Strong wind") ~ "Granizo",
    clima %in% c("Mist or Fog", "Mist or Fog & Frost", "Mist or Fog & Strong wind") ~ "Niebla"
  ))


data <- data %>%
  mutate(severidad = case_when(
    severidad %in% c("Non-Injury Crash") ~ "Accidente sin lesiones",
        severidad %in% c("Minor Crash") ~ "Accidente leve",
    severidad %in% c("Fatal Crash") ~ "Accidente fatal",
    severidad %in% c("Serious Crash") ~ "Accidente grave"
  ))


data <- data %>%
  mutate(carretera = case_when(
    carretera %in% c("End of seal") ~ "Final del asfalto",
    carretera %in% c("Sealed") ~ "Asfalto",
    carretera %in% c("Unsealed") ~ "Sin Asfalto",
  ))


data <- data %>%
  mutate(iluminación = case_when(
    iluminación %in% c("Bright sun") ~ "Soleado",
    iluminación %in% c("Overcast") ~ "Nublado",
    iluminación %in% c("Twilight") ~ "Amanecer o atardecer",
    iluminación %in% c("Dark") ~ "Oscuro",
    iluminación %in% c("Unknown") ~ "Desconocido",
  ))


data <- data %>%
  mutate(festivos = case_when(
    festivos %in% c("Christmas New Year") ~ "Navidad y Año Nuevo",
    festivos %in% c("Easter") ~ "Pascua",
    festivos %in% c("Labour Weekend") ~ "Fin de semana del Trabajo",
    festivos %in% c("Queens Birthday") ~ "Cumpleaños de la Reina",
    festivos %in% c("No festivo") ~ "No festivo",
  ))


head(data)
```

Ahora hacemos un análisis estadístico de nuestra base de datos, de todas las variables.

```{r}
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)

# Como nuestras variables no son del todo numéricas, hay que hacerlo para las variables que son numéricas y para las variables que son categóricas. 

# Primero hacemos las variables numéricas.
resumen_numericas <- data %>%
  summarise(
    Velocidad_Recomendada_Medio = mean(velocidad_recomendada, na.rm = TRUE),
    Velocidad_Recomendada_Minima = min(velocidad_recomendada, na.rm = TRUE),
    Velocidad_Recomendada_Maxima = max(velocidad_recomendada, na.rm = TRUE),
    Victimas_Fatales_Medio = mean(fatales, na.rm = TRUE),
    Victimas_fatales_Minimo = min(fatales, na.rm = TRUE),
    Victimas_fatales_Maximo = max(fatales, na.rm = TRUE),
    Víctimas_Lesiones_Menores_Medio = mean(lesiones_menores, na.rm = TRUE),
    Víctimas_Lesiones_Menores_Minimo = min(lesiones_menores, na.rm = TRUE),
    Víctimas_Lesiones_Menores_Maximo = max(lesiones_menores, na.rm = TRUE),
    Víctimas_Lesiones_Graves_Medio = mean(lesiones_graves, na.rm = TRUE),
    Víctimas_Lesiones_Graves_Minimo = min(lesiones_graves, na.rm = TRUE),
    Víctimas_Lesiones_Graves_Maximo = max(lesiones_graves, na.rm = TRUE),
    Límite_Velocidad_Medio = mean(limite_velocidad, na.rm = TRUE),
    Límite_Velocidad_Minima = min(limite_velocidad, na.rm = TRUE),
    Límite_Velocidad_Maxima = max(limite_velocidad, na.rm = TRUE)
  )

# Variables Categóricas
resumen_categoricas <- tibble(
  Variable = c("Severidad del accidente", "Período de vacaciones", "Iluminación", "Superficie de la carretera", "Clima"),
  Frecuencia = c(
    paste(names(table(data$severidad)), collapse = ", "),
    paste(names(table(data$festivos)), collapse = ", "),
    paste(names(table(data$iluminación)), collapse = ", "),
    paste(names(table(data$carretera)), collapse = ", "),
    paste(names(table(data$clima)), collapse = ", ")
  )
)

# Tabla combinada de variables numéricas y categóricas
tabla_resumen <- data.frame(
  Variable = c(
    "Velocidad recomendada", "Víctimas fatales", "Víctimas con lesiones menores",
    "Víctimas con lesiones graves", "Límite de velocidad",
    resumen_categoricas$Variable
  ),
  Media = c(
    resumen_numericas$Velocidad_Recomendada_Medio,
    resumen_numericas$Victimas_Fatales_Medio,
    resumen_numericas$Víctimas_Lesiones_Menores_Medio,
    resumen_numericas$Víctimas_Lesiones_Graves_Medio,
    resumen_numericas$Límite_Velocidad_Medio,
    rep(NA, 5)
  ),
  Mínimo = c(
    resumen_numericas$Velocidad_Recomendada_Minima,
    resumen_numericas$Victimas_fatales_Minimo,
    resumen_numericas$Víctimas_Lesiones_Menores_Minimo,
    resumen_numericas$Víctimas_Lesiones_Graves_Minimo,
    resumen_numericas$Límite_Velocidad_Minima,
    rep(NA, 5)
  ),
  Máximo = c(
    resumen_numericas$Velocidad_Recomendada_Maxima,
    resumen_numericas$Victimas_fatales_Maximo,
    resumen_numericas$Víctimas_Lesiones_Menores_Maximo,
    resumen_numericas$Víctimas_Lesiones_Graves_Maximo,
    resumen_numericas$Límite_Velocidad_Maxima,
    rep(NA, 5)
  ),
  Frecuencia = c(
    rep(NA, 5),
    resumen_categoricas$Frecuencia
  )
)

# Mostrar la tabla
tabla_resumen_kable <- kable(tabla_resumen, caption = "Resumen de Variables Numéricas y Categóricas", booktabs = TRUE) %>%
  kable_styling(full_width = FALSE) %>%
  add_header_above(c(" " = 1, "Resumen" = 3, "Categorías" = 1)) %>%
  footnote(general = "Fuente: Elaboración propia utilizando la base de datos de Kaggle")

tabla_resumen_kable

```

Ahora, procederemos a realizar una **matriz de correlación para las variables categóricas** contenidas en la base de datos. El objetivo de este análisis es identificar posibles **relaciones** entre las distintas variables cualitativas, tales como la severidad del accidente, las condiciones climáticas, el tipo de iluminación, la superficie de la carretera, y si el evento ocurrió durante un período de vacaciones.

El resultado se presentará mediante un **mapa de calor (heatmap)** que utiliza una escala de colores donde los tonos más rojizos representan correlaciones positivas más fuertes y los azulados indican correlaciones negativas. Además, se incluirán los valores numéricos directamente en cada celda, facilitando así la interpretación precisa de los niveles de asociación entre las distintas variables cualitativas. Esta representación permite identificar patrones relevantes que podrían ser clave en la comprensión de los factores que influyen en la severidad y características de los accidentes..

```{r}
library(dplyr)
library(ggplot2)
library(corrplot)
library(reshape2)

# Escogemos las variables que nos interesan para la matriz de correlación.
data_correlacion <- data %>%
  select(severidad, festivos, iluminación, carretera, clima)


data_correlacion$severidad <- as.numeric(as.factor(data_correlacion$severidad))
data_correlacion$festivos <- as.numeric(as.factor(data_correlacion$festivos))
data_correlacion$iluminación <- as.numeric(as.factor(data_correlacion$iluminación))
data_correlacion$carretera <- as.numeric(as.factor(data_correlacion$carretera))
data_correlacion$clima <- as.numeric(as.factor(data_correlacion$clima))


colnames(data_correlacion) <- c("Severidad del accidente", "Período de vacaciones", "Iluminación", "Superficie de la carretera", "Clima")


# Crear la matriz de correlación
matriz_correlacion <- cor(data_correlacion, use = "complete.obs")

# Transformar la matriz en formato largo para graficar
base_matriz <- melt(matriz_correlacion)

# Crear el gráfico de calor con etiquetas
ggplot(base_matriz, aes(Var1, Var2, fill = value)) +
  geom_tile(color = "white") +
  geom_text(aes(label = round(value, 2)), size = 4, color = "black") + 
  scale_fill_gradient2(
    low = "blue", mid = "white", high = "red",
    midpoint = 0, limit = c(-1, 1), space = "Lab", name = "Correlación"
  ) +
  theme_minimal() +
  labs(
    title = "Matriz de Correlación de Variables Categóricas",
    x = "", y = "",
    caption = "Fuente: Elaboración propia utilizando la base de datos de Kaggle"
  ) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(angle = 0)
  )


```

Lo anterior se hizo con el fin de tener una **idea exploratoria general** de cómo se mueven juntas las categorías al ser codificadas, pero **esta correlación no debe interpretarse literalmente**, salvo que las variables tengan un orden real y bien definido, de manera que lo mejor para analizar independecia de variables categoricas son las **tablas de contingencia** junto con **estadísticos como el chi-cuadrado.**

Ahora, procederemos a construir una **matriz de correlación para las variables numéricas** presentes en la base de datos. El propósito de este análisis es evaluar la **relación lineal entre pares de variables cuantitativas**, tales como la velocidad recomendada, el límite de velocidad, el número de víctimas fatales, y las lesiones menores o graves asociadas a los accidentes.

A diferencia de las variables categóricas, las variables numéricas permiten calcular coeficientes de correlación como el **coeficiente de Pearson**, que mide la **intensidad** de la relación lineal entre dos variables. Un valor cercano a 1 indica una fuerte correlación positiva, mientras que valores cercanos a -1 reflejan una correlación negativa fuerte. Valores próximos a 0 sugieren ausencia de relación lineal.

```{r}
library(ggplot2)
library(reshape2)

data_correlacion_numerica <- data %>%
  select(velocidad_recomendada, fatales, lesiones_menores, lesiones_graves, limite_velocidad)


colnames(data_correlacion_numerica) <- c(
  "Velocidad recomendada", "Víctimas fatales", "Víctimas con lesiones menores", "Víctimas con lesiones graves", "Límite de velocidad"
)

# Calcular la matriz de correlación
matriz_correlacion_numericas <- cor(data_correlacion_numerica, use = "complete.obs", method = "pearson")
base_matriz_numericas <- melt(matriz_correlacion_numericas)

# Crear gráfico de calor con etiquetas numéricas
ggplot(base_matriz_numericas, aes(Var1, Var2, fill = value)) +
  geom_tile(color = "white") +
  geom_text(aes(label = round(value, 2)), size = 4, color = "black") +
  scale_fill_gradient2(
    low = "blue", mid = "white", high = "red",
    midpoint = 0, limit = c(-1, 1), space = "Lab", name = "Correlación"
  ) +
  theme_minimal() +
  labs(
    title = "Matriz de Correlación de Variables Numéricas",
    x = "", y = "",
    caption = "Fuente: Elaboración propia utilizando la base de datos de Kaggle"
  ) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(angle = 0)
  )
```

Al analizar la matriz de correlación de las variables numéricas, se observa una fuerte correlación positiva entre la velocidad recomendada y el límite de velocidad, lo cual resulta intuitivo, dado que ambas están directamente relacionadas con las condiciones del camino y las normativas de tránsito. Esta relación indica que a medida que el límite de velocidad aumenta en una determinada zona, también tiende a incrementarse la velocidad recomendada para los conductores, lo que podría refleja una adaptación de la infraestructura vial a las condiciones del entorno, como el tipo de carretera y su capacidad de soportar vehículos a mayor velocidad.

Por otro lado, se detecta una débil correlación entre el número de víctimas fatales y las victímas con lesiones graves sugiere que, aunque ambas variables están relacionadas con la severidad de los accidentes, no necesariamente ocurren juntas de forma proporcional. Es decir, un accidente con muchas lesiones graves no implica automáticamente la presencia de víctimas fatales, y viceversa. Esta baja correlación puede deberse a diversos factores, como la rapidez con que se presenta asistencia médica, el tipo de accidente o el uso de medidas de seguridad como cinturones.

Ahora daremos inicio al análisis gráfico de nuestra base de datos. Comenzaremos explorando la distribución de la severidad de los accidentes, una variable categórica fundamental en nuestro estudio. Dado su carácter cualitativo, la forma más adecuada de visualizar esta información es mediante un gráfico de barras, el cual nos permitirá observar claramente la frecuencia de cada categoría de severidad presente en el conjunto de datos. Esta representación facilitará la identificación de patrones o posibles desequilibrios en la ocurrencia de accidentes según su gravedad.

```{r}
library(ggplot2) 
# Gráfico con las distribuciones del género 

ggplot(data, aes(x = severidad, fill = severidad)) + geom_bar() + scale_fill_manual(values = c("Accidente fatal" = "purple", "Accidente serio" = "red", "Accidente leve" = "blue", "Accidente sin lesiones" = 'gray')) + labs(x = "Distribución de la Severidad de los Accidentes", y = "Frecuencia") + theme_minimal() + labs(caption = "Fuente: Elaboración propia utilizando la base de datos de Kaggle") + theme(plot.caption = element_text(hjust = 0.5))

```

El gráfico de barras revela que la mayoría de los accidentes registrados en la base de datos corresponden a incidentes de severidad **leve o sin heridos**, mientras que los casos más graves, como aquellos con víctimas **serias o fatales**, son considerablemente menos frecuentes. Esta distribución sugiere que, aunque los accidentes son relativamente comunes, la mayoría no resultan en consecuencias extremadamente severas. Sin embargo, la presencia, aunque baja, de accidentes fatales resalta la importancia de seguir analizando los factores asociados a estos casos críticos.

Además decidimos realizar un facet en esta misma variable con respecto a la variable "Education Level", con el fin de visualizar la distribución en cada categoría, esto porque queremos descartar o validar que de alguna forma el nivel educativo tiene relación con nuestra variable objetivo, la cual es la calificación de riesgo.

```{r}
library(ggplot2)
library(dplyr)


ggplot(data, aes(x = clima, fill = severidad)) +
  geom_bar(position = "fill") + 
  labs(
    title = "Distribución de la Severidad de los Accidentes según el Clima",
    x = "Condiciones Climáticas",
    y = "Proporción",
    fill = "Severidad"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c(
    "Accidente fatal" = "#990000",        # rojo oscuro
    "Accidente grave" = "#cc0000",      # rojo intermedio
    "Accidente leve" = "#e06666",        # rojo más claro
    "Accidente sin lesiones" = "#f4cccc"    # rojo muy claro
  ))
```
